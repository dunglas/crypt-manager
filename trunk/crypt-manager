#!/usr/bin/python
# vim: set fileencoding=utf-8 :
# Copyright (C) 2007 Kévin Dunglas <dunglas@gmail.com>
#
# Authors:
#  Kévin Dunglas
#
# This program is a part of a the Google Summer Of Code 2007
# For futher information see :
# http://code.google.com/soc/ubuntu/appinfo.html?csaid=EF4FCF874D88234
#
# This program is free software; you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free Software
# Foundation; either version 2 of the License, or (at your option) any later
# version.
#
# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
# details.
#
# You should have received a copy of the GNU General Public License along with
# this program; if not, write to the Free Software Foundation, Inc., 59 Temple
# Place, Suite 330, Boston, MA 02111-1307 USA

import os
import sys
import cPickle
import time
import cryptmanager


APPNAME="crypt-manager"
APPVERSION="0.1"
CACHE = os.environ['HOME'] + "/.config/cryptmanager/cache"


def save_data():
    if folders == None:
        return
    if not os.path.exists(CACHE):
        os.makedirs(CACHE)
    print folders
    f = open(os.path.join(CACHE, "folders"), "w")
    print f
    cPickle.dump(folders, f, protocol = cPickle.HIGHEST_PROTOCOL)
    f.close()


def load_data():
    if not os.path.exists(os.path.join(CACHE, "folders")):
        folders = cryptmanager.Folders()
        return
        
    f = open(os.path.join(CACHE, "folders"), "r")
    folders = cPickle.load(f)
    f.close()


def exit(para=0):
    save_data()
    sys.exit(para)

if __name__ == '__main__':
    folders = load_data()

    # Command Line Interface
    if len(sys.argv) == 2 and sys.argv[1] == "--help":
        msg = APPNAME + """, an encrypted folder manager
Options:
--crypt DIRECTORY SIZE	encrypt directory
--open DIRECTORY	open an encrypted folder
--help			display this help message
--close DIRECTORY	close an encrypted folder
--uncrypt DIRECTORY	uncrypt encrypted folder
--version		display version information"""
        exit(msg)

    elif len(sys.argv) == 2 and sys.argv[1] == "--test":
        pass

    elif len(sys.argv) == 2 and sys.argv[1] == "--version":
        msg = APPNAME + " " + APPVERSION
        exit(msg)

    elif len(sys.argv) == 4 and sys.argv[1] == "--crypt":
        password = raw_input("Password: ")
        folder = cryptmanager.Folder(sys.argv[2], password, sys.argv[3])
        try:
            cryptmanager.Manage(folder).crypt()
        except IMGexists:
            exit(folder.path + " is already a crypted folder.")
        else:
            folders.add(folder)
            exit()

    elif len(sys.argv) == 3 and sys.argv[1] == "--close":
        folder = cryptmanager.Folder(sys.argv[2])
        cryptmanager.Manage(folder).unmount()
        exit()

    elif len(sys.argv) == 3 and sys.argv[1] == "--open":
        password = raw_input("Password: ")
        folder = cryptmanager.Folder(sys.argv[2], password)
        try:
            cryptmanager.Manage(folder).mount()
        except AlreadyOpened:
            exit(folder.path + " is already opened")
        except BadPassword:
            exit("Your password is wrong")
        else:
            exit()

    elif len(sys.argv) == 3 and sys.argv[1] == "--uncrypt":
        folder = cryptmanager.Folder(sys.argv[2], password)
        cryptmanager.Manage(folder).uncrypt()
        folders.rem(folder)
        exit()

    else:
        msg = """Invalid option
Try « """ + APPNAME + """ --help » to get more information"""
        exit(msg)
