#!/usr/bin/python
# vim: set fileencoding=utf-8 :
# Copyright (C) 2007 Kévin Dunglas <dunglas@gmail.com>
#
# Authors:
#  Kévin Dunglas
#
# This program is a part of a the Google Summer Of Code 2007
# For futher information see :
# http://code.google.com/soc/ubuntu/appinfo.html?csaid=EF4FCF874D88234
#
# This program is free software; you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free Software
# Foundation; either version 3 of the License, or (at your option) any later
# version.
#
# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
# details.
#
# You should have received a copy of the GNU General Public License along with
# this program; if not, write to the Free Software Foundation, Inc., 59 Temple
# Place, Suite 330, Boston, MA 02111-1307 USA

import os
import sys
import cryptmanager


APPNAME="crypt-manager"
APPVERSION="0.1"
CACHE = os.environ['HOME'] + "/.cryptmanager/cache"


def exit(para=0):
    data.save()
    sys.exit(para)


if __name__ == '__main__':
    data = cryptmanager.Data()
    folders = data.folders
    folders.clean()
    
    # Command Line Interface
    if len(sys.argv) == 2 and sys.argv[1] == "--help":
        msg = APPNAME + """, an encrypted folder manager
Options:
--crypt DIRECTORY       encrypt directory
--open DIRECTORY        open an encrypted folder
--help                  display this help message
--close DIRECTORY       close an encrypted folder
--decrypt DIRECTORY     decrypt encrypted folder
--version               display version information"""
        exit(msg)

    elif len(sys.argv) >= 2 and sys.argv[1] == "--info":
        if len(sys.argv) == 2:
            print "Folder list:"
            print folders.li
        if len(sys.argv) == 3:
            print "Open:"
            print folders.get(sys.argv[2]).opened
            print "Digest:"
            print folders.get(sys.argv[2]).digest
        
    elif len(sys.argv) == 2 and sys.argv[1] == "--version":
        msg = APPNAME + " " + APPVERSION
        exit(msg)
    
    elif len(sys.argv) == 2 and sys.argv[1] == "--clean":
        folders.clean()
        exit()

    elif len(sys.argv) == 3 and sys.argv[1] == "--crypt":
        password = raw_input("Password: ")
        folder = cryptmanager.Folder(sys.argv[2])
        try:
            cryptmanager.Manage(folder).crypt(password)
        except cryptmanager.AlreadyEncrypted:
            exit(folder.path + " is already a crypted folder.")
        else:
            folders.add(folder)
            exit()

    elif len(sys.argv) == 3 and sys.argv[1] == "--close":
        try:
            folder = folders.get(sys.argv[2])
        except cryptmanager.NoEncrypted:
            exit("This is not a crypted directory.")
        try:
            folder = cryptmanager.Manage(folder).unmount()
        except cryptmanager.NotOpened:
            exit("This folder is not opened.")
        folders.update(folder)
        exit()

    elif len(sys.argv) == 3 and sys.argv[1] == "--open":
        try:
            folder = folders.get(sys.argv[2])
        except cryptmanager.NoEncrypted:
            exit("This is not a crypted directory.")
        password = raw_input("Password: ")
        try:
            folder = cryptmanager.Manage(folder).mount(password)
        except cryptmanager.AlreadyOpened:
            exit(folder.path + " is already opened.")
        except cryptmanager.BadPassword:
            exit("Your password is wrong.")
        else:
            folders.update(folder)
            exit()

    elif len(sys.argv) == 3 and sys.argv[1] == "--decrypt":
        try:
            folder = folders.get(sys.argv[2])
        except cryptmanager.AlreadyOpened:
            exit(folder.path + " is already opened.")
        password = raw_input("Password: ")
        try:
            cryptmanager.Manage(folder).decrypt(password)
        except cryptmanager.BadPassword:
            exit("Your password is wrong.")
        #folders.rem(folder)
        exit()

    else:
        msg = """Invalid option
Try « """ + APPNAME + """ --help » to get more information"""
        exit(msg)
